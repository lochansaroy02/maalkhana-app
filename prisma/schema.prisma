generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model District {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  users        User[]
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  passwordHash  String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  districtId    String
  policeStation String
  rank          String
  role          String
  mobileNo      String
  entries       MalkhanaEntry[]
  vehicles      SeizedVehicle[]
  District      District        @relation(fields: [districtId], references: [id])
}

model SeizedVehicle {
  id              String    @id @default(cuid())
  srNo            String?
  gdNo            String
  gdDate          String
  underSection    String
  rtoName         String?
  vehicleType     String
  colour          String
  registrationNo  String
  engineNo        String
  description     String
  status          String
  policeStation   String
  ownerName       String
  seizedBy        String
  caseProperty    String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  districtId      String?
  firNo           String?
  userId          String?
  address         String?
  document        String?
  fathersName     String?
  isReturned      Boolean   @default(false)
  mobile          String?
  movePurpose     String?
  moveTrackingNo  String?
  name            String?
  receviedBy      String?
  releaseItemName String?
  returnBackFrom  String?
  returnDate      DateTime?
  takenOutBy      String?
  moveDate        String?
  documentUrl     String?
  receivedBy      String?
  photoUrl        String?
  isMovement      Boolean?  @default(false)
  isRelease       Boolean?  @default(false)
  receiverName    String?   @map("recevierName")
  dbName          String?
  User            User?     @relation(fields: [userId], references: [id])
}

model MalkhanaEntry {
  id    String @id @default(uuid())
  wine  Int?
  srNo  Int?
  gdNo  Int?
  Year  Int?
  cash  Int?
  boxNo Int    @default(0)

  yellowItemPrice Int?

  // ... other fields unchanged
  wineType         String
  gdDate           String
  underSection     String
  policeStation    String
  IOName           String
  vadiName         String
  HM               String
  accused          String
  firNo            String?
  status           String
  entryType        String
  place            String
  courtNo          String
  courtName        String
  createdAt        DateTime? @default(now())
  updatedAt        DateTime? @updatedAt
  districtId       String?
  photoUrl         String    @default("")
  userId           String?
  address          String?
  document         String?
  fathersName      String?
  isReturned       Boolean?  @default(false)
  mobile           String?
  moveDate         String?
  movePurpose      String?
  moveTrackingNo   String?
  name             String?
  photo            String?
  releaseItemName  String?
  returnBackFrom   String?
  returnDate       DateTime?
  takenOutBy       String?
  caseProperty     String?
  receivedBy       String?
  receiverName     String?
  documentUrl      String?
  description      String?
  isMovement       Boolean?  @default(false)
  isRelease        Boolean?  @default(false)
  dbName           String?
  releaseOrderedBy String?
  User             User?     @relation(fields: [userId], references: [id])
}
