generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model District {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  users        User[]
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  passwordHash  String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  districtId    String
  policeStation String
  rank          String
  role          String
  mobileNo      String
  entries       MalkhanaEntry[]
  vehicles      SeizedVehicle[]
  District      District        @relation(fields: [districtId], references: [id])
}

model SeizedVehicle {
  id              String    @id @default(cuid())
  srNo            String?
  gdNo            String
  gdDate          String
  underSection    String
  rtoName         String?
  vehicleType     String
  colour          String
  registrationNo  String
  engineNo        String
  description     String
  status          String
  policeStation   String
  ownerName       String
  seizedBy        String
  caseProperty    String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  districtId      String?
  firNo           String?
  userId          String?
  address         String?
  document        String?
  fathersName     String?
  isReturned      Boolean   @default(false)
  mobile          String?
  movePurpose     String?
  moveTrackingNo  String?
  name            String?
  receviedBy      String?
  releaseItemName String?
  returnBackFrom  String?
  returnDate      DateTime?
  takenOutBy      String?
  moveDate        String?
  documentUrl     String?
  receivedBy      String?
  photoUrl        String?
  isMovement      Boolean?  @default(false)
  isRelease       Boolean?  @default(false)
  receiverName    String?   @map("recevierName")
  dbName          String?
  User            User?     @relation(fields: [userId], references: [id])
}

model MalkhanaEntry {
  id String @id @default(uuid())

  firNo     String?
  srNo      Int?    @default(1)
  entryType String
  gdNo      Int?
  gdDate    String

  underSection String
  vadiName     String
  accused      String
  IOName       String
  HM           String

  policeStation String
  Year          Int?
  boxNo         Int?
  status        String
  place         String
  courtNo       String
  courtName     String

  wine            Int?
  cash            Int?
  wineType        String
  yellowItemPrice Int?
  address         String?
  // ... other fields unchanged

  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @updatedAt
  districtId     String?
  photoUrl       String    @default("")
  userId         String?
  document       String?
  fathersName    String?
  isReturned     Boolean?  @default(false)
  mobile         String?
  moveDate       String?
  movePurpose    String?
  moveTrackingNo String?
  name           String?
  description    String?

  photo            String?
  releaseItemName  String?
  returnBackFrom   String?
  returnDate       DateTime?
  takenOutBy       String?
  caseProperty     String?
  receivedBy       String?
  receiverName     String?
  documentUrl      String?
  isMovement       Boolean?  @default(false)
  isRelease        Boolean?  @default(false)
  dbName           String?
  releaseOrderedBy String?
  User             User?     @relation(fields: [userId], references: [id])
}
