generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model District {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  users        User[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model User {
  id            String @id @default(uuid())
  name          String
  policeStation String
  rank          String
  role          String
  mobileNo      String
  email         String @unique
  passwordHash  String

  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  entries   MalkhanaEntry[]
  vehicles  SeizedVehicle[]

  districtId String
  District   District @relation(fields: [districtId], references: [id])
}

model SeizedVehicle {
  id             String  @id @default(cuid())
  srNo           String?
  firNo          String?
  gdNo           String
  gdDate         String
  underSection   String
  vehicleType    String
  colour         String
  registrationNo String
  engineNo       String
  description    String
  status         String
  policeStation  String
  ownerName      String
  seizedBy       String
  caseProperty   String

  // movment details 
  isReturned Boolean @default(false)
  receviedBy String?

  returnBackFrom  String?
  takenOutBy      String?
  moveTrackingNo  String?
  returnDate      DateTime?
  movePurpose     String?
  name            String?
  photoUrl        String?
  document        String?
  moveDate        String?
  receivedBy      String?
  documentUrl     String?
  isMovement      Boolean?  @default(false)
  // release details
  isRelease       Boolean?  @default(false)
  receiverName    String?
  fathersName     String?
  address         String?
  mobile          String?
  releaseItemName String?

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  districtId String?
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
}

model MalkhanaEntry {
  id           String  @id @default(uuid())
  wine         Int?
  cash         Int?
  wineType     String
  photoUrl     String  @default("")
  firNo        String?
  srNo         String?
  gdNo         String
  gdDate       String
  underSection String
  description  String?

  Year          String
  policeStation String
  IOName        String
  vadiName      String
  HM            String
  accused       String
  status        String
  entryType     String
  place         String
  boxNo         String
  courtNo       String
  courtName     String

  //movement entry 
  isMovement     Boolean?  @default(false)
  moveDate       String?
  takenOutBy     String?
  moveTrackingNo String?
  movePurpose    String?
  name           String?
  caseProperty   String?
  isReturned     Boolean?  @default(false)
  receivedBy     String?
  returnBackFrom String?
  returnDate     DateTime?
  documentUrl    String?

  // release entry
  isRelease      Boolean? @default(false)
  receiverName    String?
  fathersName     String?
  address         String?
  mobile          String?
  releaseItemName String?

  photo    String?
  document String?

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  districtId String?
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
}

// model MalkhanaMovement {
//   id             String  @id @default(cuid())
//   srNo           String
//   moveDate       String
//   firNo          String  @unique
//   underSection   String
//   takenOutBy     String
//   moveTrackingNo String
//   movePurpose    String
//   name           String
//   photo          String?
//   document       String?

//   isReturned     Boolean   @default(false)
//   receviedBy     String?
//   returnBackFrom String?
//   returnDate     DateTime?

//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt
//   districtId String?
//   User       User?    @relation(fields: [userId], references: [id])
//   userId     String?
// }

// model MalkhanaRelease {
//   id              String @id @default(cuid())
//   srNo            String
//   moveDate        String
//   firNo           String @unique
//   underSection    String
//   takenOutBy      String
//   moveTrackingNo  String
//   movePurpose     String
//   name            String
//   recevierName    String
//   fathersName     String
//   address         String
//   mobile          String
//   releaseItemName String

//   photo    String?
//   document String?

//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt
//   districtId String?
//   User       User?    @relation(fields: [userId], references: [id])
//   userId     String?
// }

model Report {
  id            String @id @default(cuid())
  movementCount Int
}
